@c -*- texinfo -*-

@c Copyright (C) 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2016, 2020, 2024 Moreno Marzolla
@c
@c This file is part of the queueing package.
@c
@c The queueing package is free software; you can redistribute it
@c and/or modify it under the terms of the GNU General Public License
@c as published by the Free Software Foundation; either version 3 of
@c the License, or (at your option) any later version.
@c
@c The queueing package is distributed in the hope that it will be
@c useful, but WITHOUT ANY WARRANTY; without even the implied warranty
@c of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
@c GNU General Public License for more details.
@c
@c You should have received a copy of the GNU General Public License
@c along with the queueing package; see the file COPYING.  If not, see
@c <http://www.gnu.org/licenses/>.

@node Summary
@chapter Summary

@menu
* About the Queueing Package::          What is the Queueing package.
* Contributing Guidelines::             How to contribute.
* Acknowledgments::
@end menu

@node About the Queueing Package
@section About the Queueing Package

This document describes the @code{queueing} package for GNU Octave
(@code{queueing} in short). The @code{queueing} package, previously
known as @code{qnetworks} toolbox, is a collection of functions for
analyzing queueing networks and Markov chains written for GNU
Octave. Specifically, @code{queueing} contains functions for analyzing
Jackson networks, open, closed or mixed product-form BCMP networks,
and computing performance bounds. The following algorithms are
available

@itemize

@item Convolution for closed, single-class product-form networks
with load-dependent service centers;

@item Exact and approximate Mean Value Analysis (MVA) for single and
multiple class product-form closed networks;

@item MVA for mixed, multiple class product-form networks
with load-independent service centers;

@item Approximate MVA for closed, single-class networks with blocking
(MVABLO algorithm by F. Akyildiz);

@item Asymptotic Bounds, Balanced System Bounds and Geometric Bounds;

@end itemize

@noindent @code{queueing} 
provides functions for analyzing the following types of single-station
queueing systems:

@itemize

@item @math{M/M/1}
@item @math{M/M/m}
@item @math{M/M/\infty}
@item @math{M/M/1/k} single-server, finite capacity system
@item @math{M/M/m/k} multiple-server, finite capacity system
@item Asymmetric @math{M/M/m}
@item @math{M/G/1} (general service time distribution)
@item @math{M/H_m/1} (Hyperexponential service time distribution)
@end itemize

Functions for Markov chain analysis are also provided (discrete- and
continuous-time chains are supported):

@itemize

@item Birth-death processes;
@item Transient and stationary state occupancy probabilities;
@item Mean time to absorption;
@item Expected sojourn times and time-averaged sojourn times;
@item Mean first passage times;

@end itemize

The @code{queueing} package is distributed under the terms of the GNU
General Public License (GPL), version 3 or later
(@pxref{Copying}). You are encouraged to share this software with
others, and improve this package by contributing additional functions
and reporting bugs. @xref{Contributing Guidelines}.

If you use the @code{queueing} package in a technical paper, please
cite it as:

@quotation
Moreno Marzolla. 2022. Queueing Networks and Markov Chains Analysis
with the Octave queueing package. SIGMETRICS Perform. Eval. Rev. 49, 4
(March 2022), 47â€“52. @url{https://doi.org/10.1145/3543146.3543158}
@end quotation

If you use BibTeX, this is the citation block:

@verbatim
@article{queueing,
  author = {Marzolla, Moreno},
  title = {Queueing Networks and Markov Chains Analysis
           with the Octave queueing package},
  year = {2022},
  issue_date = {March 2022},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {49},
  number = {4},
  issn = {0163-5999},
  doi = {10.1145/3543146.3543158},
  journal = {SIGMETRICS Perform. Eval. Rev.},
  month = {jun},
  pages = {47--52}
}
@end verbatim

@node Contributing Guidelines
@section Contributing Guidelines

Contributions and bug reports are @emph{always} welcome. If you want
to contribute to the @code{queueing} package, here are some
guidelines:

@itemize

@item If you are contributing a new function, please embed proper
documentation within the function itself. The documentation must be in
@code{texinfo} format, so that it can be extracted and included into
the printable manual. See the existing functions for the documentation
style.

@item Make sure that each new function 
validates its input parameters. For example, a function accepting
vectors should check whether the dimensions match.

@item Provide bibliographic references for each new algorithm you 
contribute. Document any significant difference from the
reference. Update the @file{doc/references.txi} file if appropriate.

@item Include test and demo blocks.
Test blocks are particularly important, since most algorithms are
tricky to implement correctly. If appropriate, test blocks should also
verify that the function fails on incorrect inputs.

@end itemize

Send your contribution to Moreno Marzolla
(@email{moreno.marzolla@@unibo.it}). If you are a user of this
package and find it useful, let me know by dropping me a line. Thanks.

@node Acknowledgments
@section Acknowledgments

The following people (listed alphabetically) contributed to the
@code{queueing} package, either by providing feedback, reporting bugs
or contributing code: Philip Carinhas, Phil Colbourn, Diego Didona,
Yves Durand, Marco Guazzone, Dmitry Kolesnikov, Michele Mazzucco, 
Marco Paolieri.
